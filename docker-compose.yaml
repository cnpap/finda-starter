version: "3"

services:
  app:
    container_name: kwest_app
    build:
      context: .
      dockerfile: ./apps/app/Dockerfile
      args:
        NEXT_PUBLIC_POSTHOG_KEY: ${POSTHOG_KEY}
        NEXT_PUBLIC_POSTHOG_HOST: ${POSTHOG_HOST}
        NEXT_PUBLIC_BASE_URL: ${FRONTEND_BASE_URL}
        NEXT_PUBLIC_NOVU_APP_IDENTIFIER: ${NOVU_APP_IDENTIFIER}
        NEXT_PUBLIC_SENTRY_DSN: ${SENTRY_APP_DSN}
        NEXT_PUBLIC_SENTRY_ENVIRONMENT: ${SENTRY_ENVIRONMENT}
    restart: always
    environment:
      PORT: ${APP_HTTP_PORT}
      SERVER_URL: http://server:${SERVER_HTTP_PORT}
      DEV_SERVER_URL: http://server:${SERVER_HTTP_PORT}
      FINDA_TEST: 1
      SENTRY_AUTH_TOKEN: ${SENTRY_AUTH_TOKEN}
      SENTRY_ORG: ${SENTRY_ORG}
      SENTRY_PROJECT: ${SENTRY_APP_PROJECT}
    ports:
      - ${APP_HTTP_PORT}:${APP_HTTP_PORT}
    networks:
      - app_network
  server:
    container_name: kwest_server
    build:
      context: .
      dockerfile: ./apps/server/Dockerfile
    restart: always
    environment:
      NODE_ENV: production
      SERVER_HTTP_PORT: ${SERVER_HTTP_PORT}
      DATABASE_URL: ${DATABASE_URL}
      REDIS_HOST: ${REDIS_HOST}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_DB: ${REDIS_QUEUE_DB}
      REDIS_USERNAME: ${REDIS_USERNAME}
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      S3_ACCESS_KEY: ${S3_ACCESS_KEY}
      S3_SECRET_KEY: ${S3_SECRET_KEY}
      S3_BUCKET: ${S3_BUCKET}
      S3_ENDPOINT: ${S3_ENDPOINT}
      S3_REGION: ${S3_REGION}
      RESEND_API_KEY: ${RESEND_API_KEY}
      STRIPE_API_KEY: ${STRIPE_API_KEY}
      NOVU_API_URL: ${NOVU_API_URL}
      NOVU_SECRET_KEY: ${NOVU_SECRET_KEY}
    ports:
      - ${SERVER_HTTP_PORT}:${SERVER_HTTP_PORT}
    networks:
      - app_network

# Define a network, which allows containers to communicate
# with each other, by using their container name as a hostname
networks:
  app_network:
    external: true
